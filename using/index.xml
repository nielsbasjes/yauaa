<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Using the analyzer | Yauaa - Yet Another UserAgent Analyzer</title><link>/using/index.html</link><description>Using the analyzer To use this analyzer you can use it either directly in your Java based applications or use one of the User Defined Functions that are available for many of Apache bigdata tools (Hive, Flink, Beam, …) as described here.
Using in Java applications To use the library you must first add it as a dependency to your application. The library has been published to maven central so that should work in almost any environment.</description><generator>Hugo</generator><language>en-us</language><atom:link href="/using/index.xml" rel="self" type="application/rss+xml"/><item><title>User-Agent Client Hints</title><link>/using/clienthints/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/using/clienthints/index.html</guid><description>The User-Agent and the User-Agent Client Hints From about 2019 onward several of the main browsers (Firefox/Chromium/Chrome/Edge/…) have been making steps to reduce the information in the User-Agent. The main reason is that the User-Agents so far have so much detailed information that it became so unique that some could be used as a device id for tracking purposes.
In addition, steps are taken to provide information to website builders that is intended to be sufficient for running a website and less prone to tracking people.</description></item><item><title>Memory usage</title><link>/using/memoryusage/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/using/memoryusage/index.html</guid><description>The system relies heavily on HashMaps to quickly find the rules that need to be fired.
Some fields only require a handful of rules where others have a lot of them. This means that it depends on the fields that have been requested how many rules are kept in the system and thus how much memory is used to store the rules in. To get an idea of the relative memory impact of the rules needed for a specific field.</description></item><item><title>The demonstration webservlet</title><link>/using/webservlet/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/using/webservlet/index.html</guid><description>Part of the distribution is a war file that is a servlet that has a webinterface and some APIs that allow you to try things out.
This servlet can be downloaded via
&lt;dependency> &lt;groupId>nl.basjes.parse.useragent&lt;/groupId> &lt;artifactId>yauaa-webapp&lt;/artifactId> &lt;version>7.29.0&lt;/version> &lt;type>war&lt;/type> &lt;/dependency> NOTE that this is a DEMONSTRATION servlet!
It is simply the library in a servlet, no optimizations or smart memory settings have been done at all.
Docker Starting with version 5.14.1 the webservlet is also published to the central docker registry.</description></item><item><title>Kubernetes</title><link>/using/kubernetes/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/using/kubernetes/index.html</guid><description>I’ve been playing around with Kubernetes and the code below “works on my cluster”.
Basic Service First create a dedicated namespace and a very basic deployment to run this image 3 times and exposes it as a Service that simply does http.
apiVersion: v1 kind: Namespace metadata: name: yauaa --- apiVersion: apps/v1 kind: Deployment metadata: name: yauaa namespace: yauaa spec: selector: matchLabels: app: yauaa replicas: 3 template: metadata: labels: app: yauaa spec: containers: - name: yauaa image: nielsbasjes/yauaa:7.29.0 ports: - containerPort: 8080 name: yauaa protocol: TCP livenessProbe: httpGet: path: /liveness port: yauaa initialDelaySeconds: 2 periodSeconds: 3 readinessProbe: httpGet: path: /readiness port: yauaa initialDelaySeconds: 10 periodSeconds: 10 --- apiVersion: v1 kind: Service metadata: name: yauaa namespace: yauaa spec: selector: app: yauaa ports: - name: default protocol: TCP port: 80 targetPort: 8080 type: ClusterIP Custom rules in Kubernetes In some cases you’ll have internal systems with custom useragents. You can write your own rules and include them in the deployment.</description></item><item><title>Licence</title><link>/using/license/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/using/license/index.html</guid><description>Apache License Version 2.0, January 2004 https://www.apache.org/licenses/
TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION Definitions. License shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.
Licensor shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.
Legal Entity shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, control means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.</description></item></channel></rss>