<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Yet Another UserAgent Analyzer
  ~ Copyright (C) 2013-2023 Niels Basjes
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ https://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>yauaa-drill-tests</artifactId>
  <groupId>nl.basjes.parse.useragent</groupId>
  <version>0.0.1</version>

  <name>Yauaa : UDF : Apache Drill : Tests</name>
  <description>A parsing and analyzing library to get information from a useragent string.</description>

  <url>https://github.com/nielsbasjes/yauaa</url>

  <properties>
    <target.java.version>@target.java.version@</target.java.version>
    <target.java.release>@target.java.release@</target.java.release>
    <project.build.sourceEncoding>@project.build.sourceEncoding@</project.build.sourceEncoding>
    <project.build.outputEncoding>@project.build.outputEncoding@</project.build.outputEncoding>
    <maven.compiler.source>@maven.compiler.source@</maven.compiler.source>
    <maven.compiler.target>@maven.compiler.target@</maven.compiler.target>
    <maven.compiler.release>11</maven.compiler.release>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>@junit5.version@</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>nl.basjes.parse.useragent</groupId>
      <artifactId>yauaa-drill</artifactId>
      <version>@yauaa.version@</version>
    </dependency>

    <!--TEST DEPENDENCIES-->

    <!-- The default logging implementation for Yauaa -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>@log4j2.version@</version>
      <scope>test</scope>
    </dependency>

    <!-- Needed to let the tests actually run. -->
    <!-- Without this (for yauaa needless) dependency you get -->
    <!--   SLF4J: Detected both log4j-over-slf4j.jar AND bound slf4j-log4j12.jar -->
    <!--          on the class path, preempting StackOverflowError. -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>@log4j2.version@</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.drill.exec</groupId>
      <artifactId>drill-java-exec</artifactId>
      <version>@drill.version@</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>netty-all</artifactId>
          <groupId>io.netty</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.apache.drill.memory</groupId>
      <artifactId>drill-memory-base</artifactId>
      <version>@drill.version@</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.drill</groupId>
      <artifactId>drill-common</artifactId>
      <version>@drill.version@</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.drill.exec</groupId>
      <artifactId>drill-java-exec</artifactId>
      <version>@drill.version@</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-all</artifactId>
      <version>@netty.version@</version>
      <scope>provided</scope>
    </dependency>

    <!-- Apache Drill testing depends on junit4 -->
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>32.1.3-jre</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
<!--      <version>@jackson.version@</version>-->
      <version>2.14.2</version> <!-- DO NOT UPDATE AUTOMATICALLY: CHECK FIRST IF THE INTEGRATION TESTS WITH DRILL PASS!! -->
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
<!--      <version>@jackson.version@</version>-->
      <version>2.14.2</version> <!-- DO NOT UPDATE AUTOMATICALLY: CHECK FIRST IF THE INTEGRATION TESTS WITH DRILL PASS!! -->
      <scope>test</scope>
    </dependency>

  </dependencies>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Charles S. Givre</name>
      <url>https://github.com/cgivre/drill-useragent-function</url>
    </developer>
    <developer>
      <name>Niels Basjes</name>
      <email>niels@basjes.nl</email>
      <roles>
        <role>Architect</role>
        <role>Developer</role>
      </roles>
      <timezone>Europe/Amsterdam</timezone>
    </developer>
  </developers>

  <scm>
    <url>https://github.com/nielsbasjes/yauaa</url>
    <connection>scm:git:https://github.com/nielsbasjes/yauaa.git</connection>
    <developerConnection>scm:git:file:///${project.basedir}</developerConnection>
    <tag>HEAD</tag>
  </scm>

</project>
