<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Yauaa: Yet Another UserAgent Analyzer on Yauaa - Yet Another UserAgent Analyzer</title><link>/</link><description>Recent content in Yauaa: Yet Another UserAgent Analyzer on Yauaa - Yet Another UserAgent Analyzer</description><generator>Hugo</generator><language>en-us</language><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Blogpost</title><link>/other/article/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/other/article/</guid><description>&lt;p>A bit more background about this useragent parser can be found in this blog which I wrote about it: &lt;a href="https://techlab.bol.com/making-sense-user-agent-string/">https://techlab.bol.com/making-sense-user-agent-string/&lt;/a>&lt;/p></description></item><item><title>Building from source</title><link>/developer/building/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/developer/building/</guid><description>&lt;h2 id="building">Building&lt;/h2>
&lt;p>Requirements:&lt;/p>
&lt;ul>
&lt;li>A Linux class machine (can be a VM).
&lt;ul>
&lt;li>Some of the build scripts rely in bash/sed/grep and related tools, so it will not build on a Windows machine. I&amp;rsquo;m unsure if it will build on a Mac.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The normal build tools for a Java project
&lt;ul>
&lt;li>JDK 8, 11, 17 and 21 all need to be installed and defined in the &lt;code>~/.m2/toolchains.xml&lt;/code>
&lt;ul>
&lt;li>All of these are needed to ensure the code works in all UDFs.
Some of them only run on Java 8 (like Hive), some (like Flink) only work on Java 11 and some UDFs (like ElasticSearch and Trino) only work on Java 17.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>The &lt;code>./start-docker.sh&lt;/code> script launches a docker based build environment with all needed tools and configs.&lt;/p></description></item><item><title>Field values</title><link>/expect/fieldvalues/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/expect/fieldvalues/</guid><description>&lt;h2 id="output-fields">Output fields&lt;/h2>
&lt;p>The resulting output fields can be classified into several categories:&lt;/p>
&lt;ul>
&lt;li>The &lt;strong>Device&lt;/strong>:
The hardware that was used.&lt;/li>
&lt;li>The &lt;strong>Operating System&lt;/strong>:
The base software that runs on the hardware&lt;/li>
&lt;li>The &lt;strong>Layout Engine&lt;/strong>:
The underlying core that converts the &amp;lsquo;HTML&amp;rsquo; into a visual/interactive&lt;/li>
&lt;li>The &lt;strong>Agent&lt;/strong>:
The actual &amp;ldquo;Browser&amp;rdquo; that was used.&lt;/li>
&lt;li>&lt;strong>Extra fields&lt;/strong>:
In some cases we have additional fields to describe the agent. These fields are among others specific fields for the Facebook and Kobo apps,
and fields to describe deliberate useragent manipulation situations (Anonymization, Hackers, etc.)&lt;/li>
&lt;/ul>
&lt;p>Note that &lt;strong>not all fields are always available&lt;/strong>. So if you look at a specific field you will in general find null values and &amp;ldquo;Unknown&amp;rdquo; in there as well.&lt;/p></description></item><item><title>User-Agent Client Hints</title><link>/using/clienthints/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/using/clienthints/</guid><description>&lt;h2 id="the-user-agent-and-the-user-agent-client-hints">The User-Agent and the User-Agent Client Hints&lt;/h2>
&lt;p>From about 2019 onward several of the main browsers (Firefox/Chromium/Chrome/Edge/&amp;hellip;) have been making steps to reduce the information in the User-Agent. The main reason is that the User-Agents so far have so much detailed information that it became so unique that some could be used as a device id for tracking purposes.&lt;/p>
&lt;p>In addition, steps are taken to provide information to website builders that is intended to be sufficient for running a website and less prone to tracking people.&lt;/p></description></item><item><title>Base Design</title><link>/developer/basedesign/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/developer/basedesign/</guid><description>&lt;h2 id="parsing-useragents">Parsing Useragents&lt;/h2>
&lt;p>Parsing useragents is considered by many to be a ridiculously hard problem.
The main problems are:&lt;/p>
&lt;ul>
&lt;li>Although there seems to be a specification, many do not follow it.&lt;/li>
&lt;li>Useragents LIE that they are their competing predecessor with an extra flag.&lt;/li>
&lt;/ul>
&lt;p>The pattern the &amp;rsquo;normal&amp;rsquo; browser builders are following is that they all LIE about the ancestor they are trying to improve upon.&lt;/p>
&lt;p>The reason this system (historically) works is because a lot of website builders do a very simple check to see if they can use a specific feature.&lt;/p></description></item><item><title>Performance</title><link>/expect/performance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/expect/performance/</guid><description>&lt;p>On my systems I see a speed ranging from 500 to 4000 useragents per second (depending on the length and ambiguities in the useragent).
On average the speed is around 2000 per second or ~0.5ms each.
A LRU cache is in place that does over 1M per second if they are in the cache.&lt;/p>
&lt;p>Please note that the current system take approx 220MiB of RAM just for the engine (without any caching!!).&lt;/p></description></item><item><title>Related projects</title><link>/other/relatedprojects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/other/relatedprojects/</guid><description>&lt;h2 id="net-port">.NET port&lt;/h2>
&lt;p>&lt;a href="https://github.com/OrbintSoft">Stefano Balzarotti&lt;/a> is putting a lot of effort into porting Yauaa to run in .NET standard.&lt;/p>
&lt;p>You can track his efforts here on GitHub: &lt;a href="https://github.com/OrbintSoft/yauaa.netstandard">Yauaa .NET standard&lt;/a> and
download his releases via &lt;a href="https://www.nuget.org/packages/OrbintSoft.Yauaa.NetStandard">Nuget&lt;/a>.&lt;/p></description></item><item><title>Limitations</title><link>/expect/limitations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/expect/limitations/</guid><description>&lt;h2 id="it-only-analyzes-the-provided-string">It only analyzes the provided string&lt;/h2>
&lt;p>This system is based on analyzing the useragent string and looking for the patterns in the useragent string as they have been defined by parties like Google, Microsoft, Samsung and many others. These have been augmented with observations how developers apparently do things. There are really no (ok, very limited) lookup tables that define if a certain device name is a Phone or a Tablet. This makes this system very maintainable because there is no need to have a list of all possible devices.&lt;/p></description></item><item><title>Making new rules</title><link>/developer/makingnewrules/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/developer/makingnewrules/</guid><description>&lt;h2 id="detecting-new-useragent-patterns">Detecting new useragent patterns&lt;/h2>
&lt;p>When you find a useragent for which one or more of the fields are wrong there is the need to change the patterns and rules
that are used by this system for classifying these attributes.
In order to write rules this first described how the system works and what tools have been created to make writing new rules easier.&lt;/p>
&lt;h2 id="base-problem-they-all-lie">Base problem: They all lie&lt;/h2>
&lt;p>When looking at useragents it is clear that almost all of them include the name of predecessors/competitors
with which they are supposed to be compatible with.&lt;/p></description></item><item><title>Manipulations</title><link>/expect/manipulations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/expect/manipulations/</guid><description>&lt;h2 id="privacy">Privacy&lt;/h2>
&lt;p>Useragents have had a lot of information about the device and the browser in it. This has been so detailled in the past that there were many situations where the useragents could be used for tracking visitors very reliably.&lt;/p>
&lt;h3 id="reducingfreezing-the-useragent">Reducing/Freezing the UserAgent&lt;/h3>
&lt;p>So a few years ago in several browsers projects started to reduce the level of information in the UserAgent. As a direct consequence the analysis results will become less usefull over time as browsers will start taking away more and more information.&lt;/p></description></item><item><title>Memory usage</title><link>/using/memoryusage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/using/memoryusage/</guid><description>&lt;p>The system relies heavily on HashMaps to quickly find the rules that need to be fired.&lt;/p>
&lt;p>Some fields only require a handful of rules where others have a lot of them.
This means that it depends on the fields that have been requested how many rules are kept in the system and
thus how much memory is used to store the rules in.
To get an idea of the relative memory impact of the rules needed for a specific field.&lt;/p></description></item><item><title>Shading dependencies</title><link>/developer/shadingdependencies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/developer/shadingdependencies/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>This is a summary of the reasons WHY I have done the shading in this project the way it is now.&lt;/p>
&lt;p>If someone has suggestions/hint on how this can be done better I&amp;rsquo;m really curious what the &amp;lsquo;right&amp;rsquo; way of doing this is.&lt;/p>
&lt;p>The base structure of this project is we have a module with the functionality and a set of &amp;lsquo;UDFs&amp;rsquo;
that wrap this functionality so that it can be used in external processing frameworks (like Flink, Hive, etc.)&lt;/p></description></item><item><title>Reporting issues</title><link>/developer/reportingissues/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/developer/reportingissues/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>All software has bugs and things that it should do better.&lt;/p>
&lt;p>Yauaa is no exception; there are bugs, inaccuracies and there is lots of room for improvement.&lt;/p>
&lt;p>So if you find something please report it via the &lt;a href="https://github.com/nielsbasjes/yauaa/issues">issue tracker&lt;/a>.&lt;/p>
&lt;p>However&amp;hellip;&lt;/p>
&lt;h2 id="these-are-not-bugs">These are not bugs&lt;/h2>
&lt;p>I get quite a few bug reports and questions that Yauaa is not extracting the right version number from the provided User-Agent.&lt;/p>
&lt;h3 id="key-thing-to-know">Key thing to know&lt;/h3>
&lt;p>There are so many &lt;a href="/expect/manipulations/">manipulations and lies&lt;/a> in the &lt;code>User-Agent&lt;/code>s that simply looking at the User-Agent will yield the wrong answer.
Yauaa will try to give the best possible answer and some classes of lies are reported as such.&lt;/p></description></item><item><title>Try it!</title><link>/expect/tryit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/expect/tryit/</guid><description>&lt;p>You can try it online with your own browser here: &lt;a href="https://try.yauaa.basjes.nl/">https://try.yauaa.basjes.nl/&lt;/a>.&lt;/p>
&lt;p>&lt;strong>NOTES&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>This runs on a very slow and rate limited machine.&lt;/li>
&lt;li>If you really like this then run it on your local systems. It&amp;rsquo;s much faster that way.
A Kubernetes ready Docker image is provided. See this page about the &lt;a href="/using/webservlet/">WebServlet&lt;/a> for more information.&lt;/li>
&lt;/ol></description></item><item><title>The demonstration webservlet</title><link>/using/webservlet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/using/webservlet/</guid><description>&lt;p>Part of the distribution is a war file that is a servlet that has a webinterface and
some APIs that allow you to try things out.&lt;/p>
&lt;p>This servlet can be downloaded via&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>nl.basjes.parse.useragent&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>yauaa-webapp&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>7.28.1&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;type&amp;gt;&lt;/span>war&lt;span style="color:#f92672">&amp;lt;/type&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>NOTE that this is a &lt;strong>DEMONSTRATION&lt;/strong> servlet!&lt;/p>
&lt;p>It is simply the library in a servlet, no optimizations or smart memory settings have been done at all.&lt;/p>
&lt;h2 id="docker">Docker&lt;/h2>
&lt;p>Starting with version 5.14.1 the webservlet is also published to the central docker registry.&lt;/p></description></item><item><title>Kubernetes</title><link>/using/kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/using/kubernetes/</guid><description>&lt;p>I&amp;rsquo;ve been playing around with Kubernetes and the code below &amp;ldquo;works on my cluster&amp;rdquo;.&lt;/p>
&lt;h2 id="basic-service">Basic Service&lt;/h2>
&lt;p>First create a dedicated namespace and a very basic deployment to run this image 3 times and
exposes it as a &lt;code>Service&lt;/code> that simply does &lt;code>http&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Namespace&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">yauaa&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">apps/v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Deployment&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">yauaa&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#ae81ff">yauaa&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">selector&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">matchLabels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">yauaa&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">replicas&lt;/span>: &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">template&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">labels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">yauaa&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">containers&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">yauaa&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">nielsbasjes/yauaa:7.28.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">containerPort&lt;/span>: &lt;span style="color:#ae81ff">8080&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">yauaa&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">protocol&lt;/span>: &lt;span style="color:#ae81ff">TCP&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">livenessProbe&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">httpGet&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>: &lt;span style="color:#ae81ff">/liveness&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">port&lt;/span>: &lt;span style="color:#ae81ff">yauaa&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">initialDelaySeconds&lt;/span>: &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">periodSeconds&lt;/span>: &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">readinessProbe&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">httpGet&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>: &lt;span style="color:#ae81ff">/readiness&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">port&lt;/span>: &lt;span style="color:#ae81ff">yauaa&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">initialDelaySeconds&lt;/span>: &lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">periodSeconds&lt;/span>: &lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">yauaa&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#ae81ff">yauaa&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">selector&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">yauaa&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">default&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">protocol&lt;/span>: &lt;span style="color:#ae81ff">TCP&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">port&lt;/span>: &lt;span style="color:#ae81ff">80&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">targetPort&lt;/span>: &lt;span style="color:#ae81ff">8080&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">type&lt;/span>: &lt;span style="color:#ae81ff">ClusterIP&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="custom-rules-in-kubernetes">Custom rules in Kubernetes&lt;/h2>
&lt;p>In some cases you&amp;rsquo;ll have internal systems with custom useragents.
You can write your own rules and include them in the deployment.&lt;/p></description></item><item><title>Licence</title><link>/using/license/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/using/license/</guid><description>&lt;h2 id="apache-license">Apache License&lt;/h2>
&lt;p>Version 2.0, January 2004
&lt;a href="https://www.apache.org/licenses/">https://www.apache.org/licenses/&lt;/a>&lt;/p>
&lt;h2 id="terms-and-conditions-for-use-reproduction-and-distribution">TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION&lt;/h2>
&lt;h3 id="definitions">Definitions.&lt;/h3>
&lt;p>&lt;strong>License&lt;/strong> shall mean the terms and conditions for use, reproduction,
and distribution as defined by Sections 1 through 9 of this document.&lt;/p>
&lt;p>&lt;strong>Licensor&lt;/strong> shall mean the copyright owner or entity authorized by
the copyright owner that is granting the License.&lt;/p>
&lt;p>&lt;strong>Legal Entity&lt;/strong> shall mean the union of the acting entity and all
other entities that control, are controlled by, or are under common
control with that entity. For the purposes of this definition,
&lt;strong>control&lt;/strong> means (i) the power, direct or indirect, to cause the
direction or management of such entity, whether by contract or
otherwise, or (ii) ownership of fifty percent (50%) or more of the
outstanding shares, or (iii) beneficial ownership of such entity.&lt;/p></description></item><item><title>Apache Beam</title><link>/udf/apache-beam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/udf/apache-beam/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>This is a User Defined Function for &lt;a href="https://beam.apache.org">Apache Beam&lt;/a>&lt;/p>
&lt;h2 id="getting-the-udf">Getting the UDF&lt;/h2>
&lt;p>You can get the prebuilt UDF from &lt;a href="https://central.sonatype.com/artifact/nl.basjes.parse.useragent/yauaa-beam/7.28.1/jar">maven central&lt;/a>.&lt;/p>
&lt;p>If you use a maven based project simply add this dependency to your project.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>nl.basjes.parse.useragent&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>yauaa-beam&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>7.28.1&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="usage">Usage&lt;/h2>
&lt;p>Assume you have a PCollection with your records.
In most cases I see (clickstream data) these records (In this example this class is called &amp;ldquo;TestRecord&amp;rdquo;) contain the useragent string in a field and the parsed results must be added to these fields.&lt;/p></description></item><item><title>Apache Beam SQL</title><link>/udf/apache-beam-sql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/udf/apache-beam-sql/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>This is a User Defined Function for &lt;a href="https://beam.apache.org">Apache Beam SQL&lt;/a>.&lt;/p>
&lt;h2 id="getting-the-udf">Getting the UDF&lt;/h2>
&lt;p>You can get the prebuilt UDF from &lt;a href="https://central.sonatype.com/artifact/nl.basjes.parse.useragent/yauaa-beam-sql/7.28.1/jar">maven central&lt;/a>.&lt;/p>
&lt;p>If you use a maven based project simply add this dependency to your project.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>nl.basjes.parse.useragent&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>yauaa-beam-sql&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>7.28.1&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="available-functions">Available functions&lt;/h2>
&lt;h3 id="getting-a-single-value">Getting a single value&lt;/h3>
&lt;p>To get a single value from the parse result use this one:&lt;/p>
&lt;pre>&lt;code>ParseUserAgentField(userAgent, 'DeviceClass') AS deviceClassField
&lt;/code>&lt;/pre>
&lt;p>to give&lt;/p>
&lt;pre>&lt;code>Phone
&lt;/code>&lt;/pre>
&lt;h3 id="getting-several-values-as-a-map-requires-apache-beam-2300-or-newer">Getting several values as a Map (requires Apache Beam 2.30.0 or newer)&lt;/h3>
&lt;p>You can ask for all fields and return the full map with all of them in there.&lt;/p></description></item><item><title>Apache Drill</title><link>/udf/apache-drill/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/udf/apache-drill/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>This is UDF for &lt;a href="https://drill.apache.org">Apache Drill&lt;/a>.
This function was originally created by &lt;a href="https://github.com/cgivre">Charles S. Givre&lt;/a> and was imported into
the main Yauaa project to ensure users would have a prebuilt and up-to-date version available.&lt;/p>
&lt;p>This function is now also packaged as part of Apache Drill itself: &lt;a href="https://github.com/apache/drill/tree/master/contrib/udfs#user-agent-functions">documentation&lt;/a>.&lt;/p>
&lt;h2 id="notable-changes">Notable changes&lt;/h2>
&lt;p>With Yauaa 7.0.0&lt;/p>
&lt;ul>
&lt;li>the code for this UDF has been copied back from the Drill project to ensure it keeps working as expected.&lt;/li>
&lt;li>the &lt;code>parse_user_agent_field&lt;/code> has been removed and &lt;code>parse_user_agent&lt;/code> supports the same input/output now.&lt;/li>
&lt;/ul>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;p>I have copied/implemented the functions&lt;/p></description></item><item><title>Apache Flink</title><link>/udf/apache-flink/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/udf/apache-flink/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>This is a User Defined Function for &lt;a href="https://flink.apache.org">Apache Flink&lt;/a>&lt;/p>
&lt;h2 id="getting-the-udf">Getting the UDF&lt;/h2>
&lt;p>You can get the prebuilt UDF from &lt;a href="https://central.sonatype.com/artifact/nl.basjes.parse.useragent/yauaa-flink/7.28.1/jar">maven central&lt;/a>.&lt;/p>
&lt;p>If you use a maven based project simply add this dependency to your project.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>nl.basjes.parse.useragent&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>yauaa-flink&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>7.28.1&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="usage">Usage&lt;/h3>
&lt;p>Assume you have a DataSet or DataStream with your records.
In most cases I see (clickstream data) these records (In this example this class is called &amp;ldquo;TestRecord&amp;rdquo;) contain the useragent string in a field and the parsed results must be added to these fields.&lt;/p></description></item><item><title>Apache Flink Table/SQL</title><link>/udf/apache-flink-table/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/udf/apache-flink-table/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>This is a User Defined Function for &lt;a href="https://flink.apache.org">Apache Flink&lt;/a> Table&lt;/p>
&lt;h2 id="getting-the-udf">Getting the UDF&lt;/h2>
&lt;p>You can get the prebuilt UDF from &lt;a href="https://central.sonatype.com/artifact/nl.basjes.parse.useragent/yauaa-flink-table/7.28.1/jar">maven central&lt;/a>.&lt;/p>
&lt;p>If you use a maven based project simply add this dependency to your project.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>nl.basjes.parse.useragent&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>yauaa-flink-table&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>7.28.1&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;p>Assume you register this function under the name &lt;code>ParseUserAgent&lt;/code>
Then the generic usage in your SQL is&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>ParseUserAgent(&lt;span style="color:#f92672">&amp;lt;&lt;/span>useragent&lt;span style="color:#f92672">&amp;gt;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This returns a &lt;code>Map&amp;lt;String, String&amp;gt;&lt;/code> with all the requested values in one go.&lt;/p></description></item><item><title>Apache Hive</title><link>/udf/apache-hive/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/udf/apache-hive/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>This is a User Defined Function for &lt;a href="https://hive.apache.org">Apache Hive&lt;/a>&lt;/p>
&lt;h2 id="getting-the-udf">Getting the UDF&lt;/h2>
&lt;p>You can get the prebuilt UDF from &lt;a href="https://repo1.maven.org/maven2/nl/basjes/parse/useragent/yauaa-hive/7.28.1/yauaa-hive-7.28.1-udf.jar">maven central (yauaa-hive-7.28.1-udf.jar)&lt;/a>.&lt;/p>
&lt;p>NOTE: You MUST use the &lt;code>-udf.jar&lt;/code>: yauaa-hive-7.28.1-udf.jar&lt;/p>
&lt;p>If you use a maven based project simply add this dependency&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>nl.basjes.parse.useragent&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>yauaa-hive&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;classifier&amp;gt;&lt;/span>udf&lt;span style="color:#f92672">&amp;lt;/classifier&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>7.28.1&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="building">Building&lt;/h2>
&lt;p>Simply install the normal build tools for a Java project (i.e. maven and jdk) and then simply do:&lt;/p>
&lt;pre>&lt;code>mvn clean package
&lt;/code>&lt;/pre>
&lt;h2 id="example-usage">Example usage&lt;/h2>
&lt;p>First the jar file must be &amp;lsquo;known&amp;rsquo;
Either by doing&lt;/p></description></item><item><title>Apache Pig</title><link>/udf/apache-pig/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/udf/apache-pig/</guid><description>&lt;h1 id="deprecated">DEPRECATED&lt;/h1>
&lt;p>Apache Pig is no longer used. So with Yauaa 7 this UDF has been dropped.
Version 6.12 is the last released version which still has the Apache Pig in it.&lt;/p>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>This is a User Defined Function for &lt;a href="https://pig.apache.org">Apache Pig&lt;/a>&lt;/p>
&lt;h2 id="getting-the-udf">Getting the UDF&lt;/h2>
&lt;p>You can get the prebuilt UDF from &lt;a href="https://repo1.maven.org/maven2/nl/basjes/parse/useragent/yauaa-pig/6.12/yauaa-pig-6.12-udf.jar">maven central&lt;/a>.&lt;/p>
&lt;p>If you use a maven based project simply add this dependency&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>nl.basjes.parse.useragent&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>yauaa-pig&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;classifier&amp;gt;&lt;/span>udf&lt;span style="color:#f92672">&amp;lt;/classifier&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>6.12&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="example-usage">Example usage&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-pig" data-lang="pig">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- Import the UDF jar file so this script can use it&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">REGISTER&lt;/span> &lt;span style="color:#f92672">../&lt;/span>target/*-udf.jar;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">------------------------------------------------------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- Define a more readable name for the UDF and pass optional parameters&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- First parameter is ALWAYS the cache size (as a text string!)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- The parameters after that are the requested fields.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">----------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- If you simply want &amp;#39;everything&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- DEFINE ParseUserAgent nl.basjes.parse.useragent.pig.ParseUserAgent;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">----------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- If you just want to set the cache&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- DEFINE ParseUserAgent nl.basjes.parse.useragent.pig.ParseUserAgent(&amp;#39;10000&amp;#39;);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">----------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- If you want to set the cache and only retrieve the specified fields&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">DEFINE&lt;/span> ParseUserAgent nl.basjes.parse.useragent.pig.ParseUserAgent(&lt;span style="color:#e6db74">&amp;#39;10000&amp;#39;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#39;DeviceClass&amp;#39;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#39;DeviceBrand&amp;#39;&lt;/span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rawData &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">LOAD&lt;/span> &lt;span style="color:#e6db74">&amp;#39;testcases.txt&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">USING&lt;/span> PigStorage()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">AS&lt;/span> ( useragent: &lt;span style="color:#66d9ef">chararray&lt;/span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>UaData &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">FOREACH&lt;/span> rawData
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">GENERATE&lt;/span> useragent,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- Do NOT specify a type for this field as the UDF provides the definitions&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ParseUserAgent&lt;/span>(useragent) &lt;span style="color:#66d9ef">AS&lt;/span> parsedAgent;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Commandline usage</title><link>/udf/commandline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/udf/commandline/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>With version 6.0 the dedicated commandline tool was removed.&lt;/p>
&lt;p>Primary reason is that it was not getting any attention,
and it did not perform well (mainly due to the relatively big startup overhead).&lt;/p>
&lt;p>So if you have the need to use Yauaa from a commandline perspective the easiest way to do this is by starting
the docker based webservlet locally (and leave it running &amp;ldquo;for a long time&amp;rdquo;) and use something like curl
to get the information you are looking for.&lt;/p></description></item><item><title>Elastic LogStash</title><link>/udf/elastic-logstash/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/udf/elastic-logstash/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>User Defined Function (Filter plugin) for &lt;a href="https://www.elastic.co/guide/en/logstash/current/filter-plugins.html">Elastic Logstash&lt;/a>&lt;/p>
&lt;h2 id="status--dropped-">STATUS: &amp;hellip; DROPPED &amp;hellip;&lt;/h2>
&lt;p>With Yauaa 7.18.0 the logstash UDF has been dropped.&lt;/p>
&lt;p>The primary reason is that 3 years after Elastic announced Java UDF support as &amp;ldquo;GA&amp;rdquo; they have not published the needed dependencies. The workaround I came up with is starting to cause more and more problems so I&amp;rsquo;m dropping it.&lt;/p>
&lt;h2 id="still-want-it">Still want it?&lt;/h2>
&lt;p>Get the sources from the latest tag that still had it and build it yourself.
&lt;a href="https://github.com/nielsbasjes/yauaa/tree/v7.17.1/udfs/elastic/logstash">https://github.com/nielsbasjes/yauaa/tree/v7.17.1/udfs/elastic/logstash&lt;/a>&lt;/p></description></item><item><title>Elastic Search</title><link>/udf/elastic-search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/udf/elastic-search/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>User Defined Function (ingest processor) for &lt;a href="https://www.elastic.co/guide/en/elasticsearch/plugins/current/intro.html">Elastic Search&lt;/a>&lt;/p>
&lt;h2 id="status--experimental-">STATUS: &amp;hellip; EXPERIMENTAL &amp;hellip;&lt;/h2>
&lt;p>The ElasticSearch ingest plugin is very new.&lt;/p>
&lt;p>And yes it is similar to &lt;a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/user-agent-processor.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/user-agent-processor.html&lt;/a>&lt;/p>
&lt;h2 id="getting-the-udf">Getting the UDF&lt;/h2>
&lt;p>You can get the prebuilt ingest plugin from maven central for&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://repo1.maven.org/maven2/nl/basjes/parse/useragent/yauaa-elasticsearch/7.28.1/yauaa-elasticsearch-7.28.1.zip">Elastic Search 7.x&lt;/a>.&lt;/li>
&lt;li>&lt;a href="https://repo1.maven.org/maven2/nl/basjes/parse/useragent/yauaa-elasticsearch-8/7.28.1/yauaa-elasticsearch-8-7.28.1.zip">Elastic Search 8.x&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h2 id="installing-the-plugin">Installing the plugin&lt;/h2>
&lt;p>You only need to install it into your Elastic Search once&lt;/p>
&lt;p>On Elastic Search 7.x:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>bin/elasticsearch-plugin install file:///path/to/yauaa-elasticsearch-7.28.1.zip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>On Elastic Search 8.x&lt;/p></description></item><item><title>LogParser</title><link>/udf/logparser/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/udf/logparser/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>This is a User Defined Function for &lt;a href="https://github.com/nielsbasjes/logparser/">LogParser&lt;/a>&lt;/p>
&lt;h2 id="getting-the-udf">Getting the UDF&lt;/h2>
&lt;p>You can get the prebuilt UDF from &lt;a href="https://repo1.maven.org/maven2/nl/basjes/parse/useragent/yauaa-logparser/7.28.1/yauaa-logparser-7.28.1-udf.jar">maven central (yauaa-logparser-7.28.1-udf.jar)&lt;/a>.&lt;/p>
&lt;p>NOTE: You MUST use the &lt;code>-udf.jar&lt;/code>: yauaa-logparser-7.28.1-udf.jar&lt;/p>
&lt;p>If you use a maven based project simply add this dependency&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>nl.basjes.parse.useragent&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>yauaa-logparser&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;classifier&amp;gt;&lt;/span>udf&lt;span style="color:#f92672">&amp;lt;/classifier&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>7.28.1&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="client-hints">Client hints&lt;/h2>
&lt;p>Because the logparser can only dissect a &lt;em>single&lt;/em> field into multiple pieces it is impossible to extend this to support User-Agent Client Hints.&lt;/p></description></item><item><title>Snowplow</title><link>/udf/snowplow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/udf/snowplow/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>If you are a user of the Snowplow Analytics system and would like to use Yauaa in your analysis you are in luck.&lt;/p>
&lt;p>The people at Snowplow have included Yauaa as a readily available feature in their system.&lt;/p>
&lt;p>The official documentation: &lt;a href="https://docs.snowplowanalytics.com/docs/enriching-your-data/available-enrichments/yauaa-enrichment/">Snowplow Yauaa Enrichment&lt;/a>&lt;/p></description></item><item><title>Trino</title><link>/udf/trino/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/udf/trino/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>This is a User Defined Function for &lt;a href="https://trino.io">Trino&lt;/a> (a.k.a. Presto SQL)&lt;/p>
&lt;h2 id="status--experimental-">STATUS: &amp;hellip; EXPERIMENTAL &amp;hellip;&lt;/h2>
&lt;p>The Trino plugin is very new.
Please tell if it works or not in your case.&lt;/p>
&lt;p>Trino now requires Java 22 (which is non-LTS) which is not readily available for installation in Ubuntu using a normal package manager.
This means that I have chosen to no longer let the build fail if you do not have Java 22 installed.
The CI build does do Java 22 so any breaking API changes should be detected there.&lt;/p></description></item></channel></rss>